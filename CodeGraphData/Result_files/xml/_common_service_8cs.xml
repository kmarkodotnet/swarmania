<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_common_service_8cs" kind="file">
    <compoundname>CommonService.cs</compoundname>
    <innerclass refid="class_common_service" prot="public">CommonService</innerclass>
    <innernamespace refid="namespace_system_1_1_text">System::Text</innernamespace>
    <innernamespace refid="namespace_system_1_1_threading_1_1_tasks">System::Threading::Tasks</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Text;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading.Tasks;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_common_service" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_common_service" kindref="compound">CommonService</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="class_common_service_1a9e7c72b28494482ae13950dc57b8904d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_common_service_1a9e7c72b28494482ae13950dc57b8904d" kindref="member">FindNearestEnemy</ref>(GameObject<sp/>me)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lookDistance<sp/>=<sp/>me.GetComponent&lt;<ref refid="class_living_object" kindref="compound">LivingObject</ref>&gt;().GetLookDistance();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nearUnits<sp/>=<sp/>Physics2D.OverlapCircleAll(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(me.gameObject.transform.position.x,<sp/>me.gameObject.transform.position.y),<sp/>lookDistance)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(u<sp/>=&gt;<sp/>u.tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bug&quot;</highlight><highlight class="normal"><sp/>||<sp/>u.tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;castle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>nearestEnemy<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nearestDistance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>unit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nearUnits.Where(nu<sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_common_service" kindref="compound">CommonService</ref>().<ref refid="class_common_service_1a5c8a6de4f0cbfa6f18cdc0389dbb6c16" kindref="member">IsAlive</ref>(nu.gameObject)))</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEnemy<sp/>=<sp/><ref refid="class_common_service_1a730f290ba8dbbb44d582cac7cba28253" kindref="member">IsEnemy</ref>(me,<sp/>unit);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isEnemy)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>myCollider<sp/>=<sp/>me.GetComponent&lt;CapsuleCollider2D&gt;();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>otherCollider<sp/>=<sp/>unit;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>currentDistance<sp/>=<sp/>Physics2D.Distance(myCollider,<sp/>otherCollider).distance;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearestEnemy<sp/>==<sp/>null<sp/>||<sp/>nearestDistance<sp/>&gt;<sp/>currentDistance)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestEnemy<sp/>=<sp/>unit.gameObject;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nearestEnemy;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_common_service_1a1140b23a379a633102b836b05a057b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a1140b23a379a633102b836b05a057b76" kindref="member">MakeDead</ref>(GameObject<sp/>gameObject)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gameObject<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>gameObject.GetComponent&lt;<ref refid="class_bug_action_set" kindref="compound">BugActionSet</ref>&gt;()<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObject.GetComponent&lt;<ref refid="class_bug_action_set" kindref="compound">BugActionSet</ref>&gt;().<ref refid="_bug_state_enum_8cs_1a7c0ea9fee265bc2f4274dd14ef57d16aa183b62c7f067711f9c5a54913c054617" kindref="member">Dead</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>if(gameObject.GetComponent&lt;BugActionSet&gt;()<sp/>!=<sp/>null)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_common_service_1a730f290ba8dbbb44d582cac7cba28253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a730f290ba8dbbb44d582cac7cba28253" kindref="member">IsEnemy</ref>(GameObject<sp/>me,<sp/>Collider2D<sp/>unit)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a730f290ba8dbbb44d582cac7cba28253" kindref="member">IsEnemy</ref>(me,<sp/>unit.gameObject);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47" refid="class_common_service_1a11a0990ebe5ba6d3f7153f67d3011647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a11a0990ebe5ba6d3f7153f67d3011647" kindref="member">IsEnemy</ref>(GameObject<sp/>me,<sp/>GameObject<sp/>otherGameObject)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>otherGameObject.GetComponent&lt;<ref refid="class_selectable_object" kindref="compound">SelectableObject</ref>&gt;()<sp/>&amp;&amp;<sp/>otherGameObject.GetComponent&lt;<ref refid="class_selectable_object" kindref="compound">SelectableObject</ref>&gt;().GetOwnerId()<sp/>!=<sp/>me.GetComponent&lt;<ref refid="class_selectable_object" kindref="compound">SelectableObject</ref>&gt;().GetOwnerId();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_common_service_1a62f2f9eff53f20a1f173c0178fac045e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_common_service_1a62f2f9eff53f20a1f173c0178fac045e" kindref="member">FindNearestResource</ref>(GameObject<sp/>me)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lookDistance<sp/>=<sp/>me.GetComponent&lt;<ref refid="class_living_object" kindref="compound">LivingObject</ref>&gt;().GetLookDistance();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nearResources<sp/>=<sp/>Physics2D.OverlapCircleAll(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(me.gameObject.transform.position.x,<sp/>me.gameObject.transform.position.y),<sp/>lookDistance)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(u<sp/>=&gt;<sp/>u.tag<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;resource&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>nearestResource<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nearestDistance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearResources<sp/>=<sp/>nearResources.Where(nr<sp/>=&gt;<sp/><ref refid="class_common_service_1a5e69dab1fd1ff5472dc311f817ec4da4" kindref="member">IsAnyResource</ref>(nr.gameObject));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>unit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nearResources.Where(r<sp/>=&gt;<sp/>me.GetComponent&lt;<ref refid="class_resource_handler" kindref="compound">ResourceHandler</ref>&gt;().<ref refid="class_resource_handler_1ad0bf0386630bf685c2b53411a14944fc" kindref="member">GetPreferedResourceType</ref>()<sp/>==<sp/>r.GetComponent&lt;<ref refid="class_resource" kindref="compound">Resource</ref>&gt;().GetResourceType()))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>myCollider<sp/>=<sp/>me.GetComponent&lt;CapsuleCollider2D&gt;();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>otherCollider<sp/>=<sp/>unit;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>currentDistance<sp/>=<sp/>Physics2D.Distance(myCollider,<sp/>otherCollider).distance;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearestResource<sp/>==<sp/>null<sp/>||<sp/>nearestDistance<sp/>&gt;<sp/>currentDistance)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestResource<sp/>=<sp/>unit.gameObject;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearestResource<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nearestResource;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>unit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nearResources.Where(r<sp/>=&gt;<sp/>me.GetComponent&lt;<ref refid="class_resource_handler" kindref="compound">ResourceHandler</ref>&gt;().<ref refid="class_resource_handler_1ad0bf0386630bf685c2b53411a14944fc" kindref="member">GetPreferedResourceType</ref>()<sp/>!=<sp/>r.GetComponent&lt;<ref refid="class_resource" kindref="compound">Resource</ref>&gt;().GetResourceType()))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>myCollider<sp/>=<sp/>me.GetComponent&lt;CapsuleCollider2D&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>otherCollider<sp/>=<sp/>unit;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>currentDistance<sp/>=<sp/>Physics2D.Distance(myCollider,<sp/>otherCollider).distance;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearestResource<sp/>==<sp/>null<sp/>||<sp/>nearestDistance<sp/>&gt;<sp/>currentDistance)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestResource<sp/>=<sp/>unit.gameObject;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearestDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nearestResource;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_common_service_1a5c8a6de4f0cbfa6f18cdc0389dbb6c16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a5c8a6de4f0cbfa6f18cdc0389dbb6c16" kindref="member">IsAlive</ref>(GameObject<sp/>target)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target.GetComponent&lt;<ref refid="class_bug_state_handler" kindref="compound">BugStateHandler</ref>&gt;()<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>target.GetComponent&lt;<ref refid="class_bug_state_handler" kindref="compound">BugStateHandler</ref>&gt;().<ref refid="class_bug_state_handler_1afcf4cd826e6b1de4dbe8ce0432b26c71" kindref="member">GetState</ref>()<sp/>!=<sp/><ref refid="_bug_state_enum_8cs_1a7c0ea9fee265bc2f4274dd14ef57d16aa183b62c7f067711f9c5a54913c054617" kindref="member">BugStateEnum.Dead</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target.GetComponent&lt;<ref refid="class_castle_state_handler" kindref="compound">CastleStateHandler</ref>&gt;()<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>target.GetComponent&lt;<ref refid="class_castle_state_handler" kindref="compound">CastleStateHandler</ref>&gt;().GetState()<sp/>!=<sp/><ref refid="_castle_state_enum_8cs_1a2f9eaeb9d713ce93033c21e5dbbc3ca3aaefbd0597f1bc2493bbc18898243513b" kindref="member">CastleStateEnum.Destroyed</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="class_common_service_1a5e69dab1fd1ff5472dc311f817ec4da4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_common_service_1a5e69dab1fd1ff5472dc311f817ec4da4" kindref="member">IsAnyResource</ref>(GameObject<sp/>targetResource)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(targetResource.GetComponent&lt;<ref refid="class_resource" kindref="compound">Resource</ref>&gt;()<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>targetResource.GetComponent&lt;<ref refid="class_resource" kindref="compound">Resource</ref>&gt;().<ref refid="class_resource_1aa0fb45318b49ca4697397f9e02cf43e2" kindref="member">GetTotalResourceAmmount</ref>()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="G:/Work/git/unity/Swarmania/Swarmania/Assets/Scripts/Services/CommonService.cs"/>
  </compounddef>
</doxygen>
